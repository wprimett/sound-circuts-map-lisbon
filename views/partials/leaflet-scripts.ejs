<!-- <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script> -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.js"></script>

<script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v1.0.1/Leaflet.fullscreen.min.js'></script>
<link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v1.0.1/leaflet.fullscreen.css' rel='stylesheet' />

<script src="js/L.Mask.js"></script>
<script src="/js/leaflet.ajax.min.js"></script>
<script src="/data/sound_circuits_programme_json.js"></script>

<script>

  Polygons = []
  Points = []

  var sc_json;
  if (enable_soundwalks){
    sc_json = sc_json_soundwalks;
  }
  else{
    sc_json = sc_json_default;
  }
  if (invalid_access_code){
    sc_json = {}
  }

  for (i = 0; i < sc_json.features.length; i++){
    feature_json = sc_json["features"][i];
    feature_type = feature_json["geometry"]["type"];
    if (feature_type === "Polygon"){
      Polygons.push(feature_json);
      // location_bounds.push(feature_json);
    }else if (feature_type === "Point"){
      Points.push(feature_json)
    }
  }

  // for (i = 0; i < Polygons.length; i++){
  //   ply_json = Polygons[i];
  //   console.log(ply_json.geometry.coordinates)
  //
  //   ply_obj = L.geoJSON(ply_json);
  //   for (j = 0; j < Points.length; j++){
  //     pnt_json = Points[j];
  //     console.log(pnt_json.geometry.coordinates)
  //     pnt_obj = L.geoJSON(pnt_json)
  //
  //     if (inside(pnt_json.geometry.coordinates,ply_json.geometry.coordinates)){
  //       console.log("asdas")
  //     }
  //   }
  // }

// var map_url = 'https://{s}.basemaps.cartocdn.com/dark_nolabels/{z}/{x}/{y}.png'
  var map_url_global = 'https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png'
  var map_url_install = 'https://{s}.basemaps.cartocdn.com/rastertiles/light_all/{z}/{x}/{y}.png'
  var cartodbAttribution = '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, &copy; <a href="https://carto.com/attribution">CARTO</a>';

  function generate_map(lat,lng,zoom){
    var map = L.map('map', {
      'center': [lat,lng],
      'zoom': zoom,
      'layers': [
      L.tileLayer(map_url_install, {
        attribution: cartodbAttribution
      })
      ]
    });
    // or, add to an existing map:
    map.addControl(new L.Control.Fullscreen());
    return map;
  }

  map = generate_map(lat,lng,zoom);

  var yellowPinIcon = new L.Icon({
    // iconUrl: 'img/marker-icon-2x-gold-75.png',
    iconUrl: 'img/eufonia_logo_marker.png',
    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
    iconSize: [36, 36],
    iconAnchor: [12, 41],
    popupAnchor: [1, -34],
    shadowSize: [41, 41]
  });

  var locatorPinIcon = new L.Icon({
    // iconUrl: 'img/marker-icon-2x-gold-75.png',
    iconUrl: 'img/location_point.png',
    // shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
    iconSize: [15, 15],
    iconAnchor: [7.5, 7.5],
    popupAnchor: [1, -34],
    // shadowSize: [41, 41]
  });

  function userUpdateLocation(user_lat, user_lng){
    console.log("updated");
    zoom = zoom;
    map.remove();
    map = generate_map(user_lat, user_lng, zoom);
    L.marker([user_lat, user_lng], {icon: locatorPinIcon}).addTo(map)
      .bindPopup("You are here", {className: "you-are-here"}).openPopup();
    ;
    updateView();
  }

  function userReturnToOrigin(){
    const mapLink = document.querySelector('#map-link');
    mapLink.innerHTML = `</br>`
    // console.log("updated");
    lng = -9.138307571411133;
    lat = 38.7134426585726;
    zoom = 14;
    map.remove();
    map = generate_map(lat, lng, zoom);
    updateView();
  }

  // function onLocationFound(e) {
  //   var radius = e.accuracy / 2;
  //
  //   L.marker(e.latlng).addTo(map)
  //     .bindPopup("You are within " + radius + " meters from this point").openPopup();
  //
  //   L.circle(e.latlng, radius).addTo(map);
  // }
  //
  // function onLocationError(e) {
  //   alert(e.message);
  // }
  //
  // map.on('locationfound', onLocationFound);
  // map.on('locationerror', onLocationError);
  //
  // map.locate({setView: true, maxZoom: 16});

  // mask.ejs
  var latLngs = [];
  // var sc_areas = [];
  var mask_coordinates = [];
  var artwork_meta_data = [];
  var active_area_id = 0;

  Polygons.sort(function(a,b) {
      return a.properties.artwork_id - b.properties.artwork_id
  });

  for (i=0; i<Polygons.length; i++) {
    mask_coordinates.push(Polygons[i].geometry.coordinates[0]);
    // console.log(Polygons[i].properties["Artist Name"])
    // console.log(Polygons[i].properties.artwork_id)
    var meta_data = {
    "Artwork": sc_json["features"][i].properties["Artwork"],
    "Artist": sc_json["features"][i].properties["Artist Name"],
    "URL": sc_json["features"][i].properties["Website"],
    "Opening": sc_json["features"][i].properties["opening_info"]
    }
    artwork_meta_data.push(meta_data);
  }

  var coordinates = Polygons[0].geometry.coordinates[0];
  // for (i=0; i<coordinates.length; i++) {
  //   latLngs.push(new L.LatLng(coordinates[i][1], coordinates[i][0]));
  // }


  var mask = L.mask(latLngs)
  // mask.addTo(map);

  var options = {
    style: function (feature) {
      return {
        "color": "yellow",
        "weight": 2,
        "opacity": 0.4,
        "fillColor": "yellow",
        "fillOpacity": 0.75
      };
    }
  };

  // var coordinates = Polygons[0].geometry.coordinates[0];
  // var coordinates1 = Polygons[1].geometry.coordinates[0];
  // var coordinates2 = Polygons[2].geometry.coordinates[0];
  // var coordinates3 = Polygons[3].geometry.coordinates[0];
  // var coordinates4 = Polygons[4].geometry.coordinates[0];
  // var coordinates5 = Polygons[5].geometry.coordinates[0];
  // var coordinates6 = Polygons[6].geometry.coordinates[0];
  // var coordinates7 = Polygons[7].geometry.coordinates[0];
  // var coordinates8 = Polygons[8].geometry.coordinates[0];

function showPopup(this_layer_poly, active_area_id){
  var artwork_title = artwork_meta_data[active_area_id]["Artwork"];
  var artist_name = artwork_meta_data[active_area_id]["Artist"];
  var artist_url = artwork_meta_data[active_area_id]["URL"];
  var opening_info = artwork_meta_data[active_area_id]["Opening"];
  var popup = L.popup()
   .setLatLng(this_layer_poly.latlng)
   .setContent('<b>' + artwork_title + "</b><br>" +
                artist_name + "<br>" +
                opening_info +
                '<br><a target="_blank" rel="noopener noreferrer" href="' + artist_url + '">More Info</a>')
   .openOn(map);

 return popup;
}

function addMask(old_mask, mask_coordinates){
  map.removeLayer(old_mask)
  latLngs = []
  for (i=0; i<coordinates.length; i++) {
      latLngs.push(new L.LatLng(coordinates[i][1], coordinates[i][0]));
  }
  mask = L.mask(latLngs)
  mask.addTo(map);
}

function updateView(){
  var all_layerpoly = [];
  var all_coordinates = [];

  // layerpoly = new L.geoJson(Polygons[0],options)
  // layerpoly2 = new L.geoJson(Polygons[1],options)
  // layerpoly3 = new L.geoJson(Polygons[2],options)
  // layerpoly4 = new L.geoJson(Polygons[3],options)
  // layerpoly5 = new L.geoJson(Polygons[4],options)
  // layerpoly6 = new L.geoJson(Polygons[5],options)
  // layerpoly7 = new L.geoJson(Polygons[6],options)
  // layerpoly8 = new L.geoJson(Polygons[7],options)
  // layerpoly9 = new L.geoJson(Polygons[8],options)

  // all_layerpoly[0] = new L.geoJson(Polygons[0],options)
  // all_layerpoly[1] = new L.geoJson(Polygons[1],options)
  // all_layerpoly[2] = new L.geoJson(Polygons[2],options)
  // all_layerpoly[3] = new L.geoJson(Polygons[3],options)
  // all_layerpoly[4] = new L.geoJson(Polygons[4],options)
  // all_layerpoly[5] = new L.geoJson(Polygons[5],options)
  // all_layerpoly[6] = new L.geoJson(Polygons[6],options)
  // all_layerpoly[7] = new L.geoJson(Polygons[7],options)
  // all_layerpoly[8] = new L.geoJson(Polygons[8],options)

  for (i=0; i<Polygons.length; i++) {
    all_layerpoly[i] = new L.geoJson(Polygons[i],options)
    all_layerpoly[i].addTo(map);

    var new_coordinates = Polygons[i].geometry.coordinates[0];
    all_coordinates.push(new_coordinates);
  }

  // all_layerpoly[0].addTo(map);
  // all_layerpoly.push(layerpoly);
  // all_coordinates.push(coordinates);
  // all_layerpoly[1].addTo(map);
  // all_layerpoly.push(layerpoly2)
  // all_coordinates.push(coordinates1);
  // all_layerpoly[2].addTo(map);
  // all_layerpoly.push(layerpoly3)
  // all_coordinates.push(coordinates2);
  // all_layerpoly[3].addTo(map);
  // all_layerpoly.push(layerpoly4)
  // all_coordinates.push(coordinates3);
  // all_layerpoly[4].addTo(map);
  // all_layerpoly.push(layerpoly5)
  // all_coordinates.push(coordinates4);
  // all_layerpoly[5].addTo(map);
  // all_layerpoly.push(layerpoly6)
  // all_coordinates.push(coordinates5);
  // all_layerpoly[6].addTo(map);
  // all_layerpoly.push(layerpoly7)
  // all_coordinates.push(coordinates6);
  // all_layerpoly[7].addTo(map);
  // all_layerpoly.push(layerpoly8)
  // all_coordinates.push(coordinates7);
  // all_layerpoly[8].addTo(map);
  // all_layerpoly.push(layerpoly9)
  // all_coordinates.push(coordinates8);

  var polygonClicked = function(active_area_id) {
    return function areaClickedFunction(e) {
        var focus_pnt = new L.LatLng(Points[active_area_id].geometry.coordinates[1], Points[active_area_id].geometry.coordinates[0]);
        if (map.getZoom() < 14){
          map.flyTo(focus_pnt, 15);
        }else{
          map.flyTo(focus_pnt, map.getZoom());
        }
        var new_marker = L.marker(focus_pnt, {icon: yellowPinIcon}).addTo(map);
        //open popup;
        var new_popup = showPopup(e, active_area_id);
        addMask(mask, all_coordinates[active_area_id]);
        new_popup.on('remove', function() {
          map.removeLayer(mask)
          map.removeLayer(new_marker)
        });
        updateView();
    }
  }

  for (i=0; i<all_layerpoly.length; i++) {
    selected_poly = all_layerpoly[i];
    active_area_id = i
    selected_poly.addEventListener('click', polygonClicked(active_area_id));
  }

//   layerpoly.on('click', function(e) {
//   //open popup;
//   active_area = 0;
//   showPopup(e, active_area);
//   addMask(mask, coordinates);
//   updateView();
// });
//
// layerpoly2.on('click', function(e) {
//   //open popup;
//   active_area = 1;
//   showPopup(e, active_area);
//   map.removeLayer(mask)
//   addMask(mask, coordinates1);
//   updateView();
// });
//
// layerpoly3.on('click', function(e) {
//   //open popup;
//   active_area = 2;
//   showPopup(e, active_area);
//   addMask(mask, coordinates2);
//   updateView();
// });
//
// layerpoly4.on('click', function(e) {
//   //open popup;
//   active_area = 3;
//   showPopup(e, active_area);
//   addMask(mask, coordinates3);
//   updateView();
// });
//
// layerpoly5.on('click', function(e) {
//   //open popup;
//   active_area = 4;
//   showPopup(e, active_area);
//   addMask(mask, coordinates4);
//   updateView();
// });
//
// layerpoly6.on('click', function(e) {
//   //open popup;
//   active_area = 5;
//   showPopup(e, active_area);
//   addMask(mask, coordinates5);
//   updateView();
// });
//
// layerpoly7.on('click', function(e) {
//   //open popup;
//   active_area = 6;
//   showPopup(e, active_area);
//   addMask(mask, coordinates6);
//   updateView();
// });
//
// layerpoly8.on('click', function(e) {
//   //open popup;
//   active_area = 7;
//   showPopup(e, active_area);
//   addMask(mask, coordinates7);
//   updateView();
// });
//
// layerpoly9.on('click', function(e) {
//   //open popup;
//   active_area = 8;
//   showPopup(e, active_area);
//   addMask(mask, coordinates7);
//   updateView();
// }
// );
}

updateView();

</script>
