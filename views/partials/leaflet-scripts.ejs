<!-- <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script> -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.js"></script>

<script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v1.0.1/Leaflet.fullscreen.min.js'></script>
<link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v1.0.1/leaflet.fullscreen.css' rel='stylesheet' />

<script src="js/L.Mask.js"></script>

<script src="/js/leaflet.ajax.min.js"></script>

<script src="/data/sound_circuts_programme.js"></script>

<script>

  Polygons = []
  Points = []

  for (i = 0; i < sc_json.features.length; i++){
    feature_json = sc_json["features"][i];
    feature_type = feature_json["geometry"]["type"];
    if (feature_type === "Polygon"){
      Polygons.push(feature_json);
      // location_bounds.push(feature_json);
    }else if (feature_type === "Point"){
      Points.push(feature_json)
    }
  }

  // for (i = 0; i < Polygons.length; i++){
  //   ply_json = Polygons[i];
  //   console.log(ply_json.geometry.coordinates)
  //
  //   ply_obj = L.geoJSON(ply_json);
  //   for (j = 0; j < Points.length; j++){
  //     pnt_json = Points[j];
  //     console.log(pnt_json.geometry.coordinates)
  //     pnt_obj = L.geoJSON(pnt_json)
  //
  //     if (inside(pnt_json.geometry.coordinates,ply_json.geometry.coordinates)){
  //       console.log("asdas")
  //     }
  //   }
  // }

// var map_url = 'https://{s}.basemaps.cartocdn.com/dark_nolabels/{z}/{x}/{y}.png'
  var map_url_global = 'https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png'
  var map_url_install = 'https://{s}.basemaps.cartocdn.com/rastertiles/light_all/{z}/{x}/{y}.png'
  var cartodbAttribution = '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, &copy; <a href="https://carto.com/attribution">CARTO</a>';

  function generate_map(lat,lng,zoom){
    var map = L.map('map', {
      'center': [lat,lng],
      'zoom': zoom,
      'layers': [
      L.tileLayer(map_url_install, {
        attribution: cartodbAttribution
      })
      ]
    });
    // or, add to an existing map:
    map.addControl(new L.Control.Fullscreen());
    return map;
  }

  map = generate_map(lat,lng,zoom);

  var yellowPinIcon = new L.Icon({
    iconUrl: 'img/marker-icon-2x-gold-75.png',
    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
    iconSize: [25, 41],
    iconAnchor: [12, 41],
    popupAnchor: [1, -34],
    shadowSize: [41, 41]
  });

  function userUpdateLocation(user_lat, user_lng){
    console.log("updated");
    zoom = 14;
    map.remove();
    map = generate_map(user_lat, user_lng, zoom);
    L.marker([user_lat, user_lng], {icon: yellowPinIcon}).addTo(map)
    .bindPopup("You are here").openPopup();
    ;
    updateView();
  }

  function userReturnToOrigin(){
    // console.log("updated");
    lng = -9.138307571411133;
    lat = 38.7134426585726;
    zoom = 14;
    map.remove();
    map = generate_map(lat, lng, zoom);
    updateView();
  }

  // function onLocationFound(e) {
  //   var radius = e.accuracy / 2;
  //
  //   L.marker(e.latlng).addTo(map)
  //     .bindPopup("You are within " + radius + " meters from this point").openPopup();
  //
  //   L.circle(e.latlng, radius).addTo(map);
  // }
  //
  // function onLocationError(e) {
  //   alert(e.message);
  // }
  //
  // map.on('locationfound', onLocationFound);
  // map.on('locationerror', onLocationError);
  //
  // map.locate({setView: true, maxZoom: 16});

  // mask.ejs
  var latLngs = [];
  // var sc_areas = [];
  var mask_coordinates = [];
  // var artwork_meta_data = [];
  var artwork_meta_data = [];
  var active_area_id = 0;

  Polygons.sort(function(a,b) {
      return a.properties.artwork_id - b.properties.artwork_id
  });

  for (i=0; i<Polygons.length; i++) {
    mask_coordinates.push(Polygons[i].geometry.coordinates[0]);
    // console.log(Polygons[i].properties["Artist Name"])
    // console.log(Polygons[i].properties.artwork_id)
    var meta_data = {
    "Artwork": sc_json["features"][i].properties["Artwork"],
    "Artist": sc_json["features"][i].properties["Artist Name"],
    "URL": sc_json["features"][i].properties["Website"]
    }
    artwork_meta_data.push(meta_data);
  }
  // console.log(mask_coordinates)
  // console.log(artwork_meta_data)

  var coordinates = Polygons[0].geometry.coordinates[0];
  for (i=0; i<coordinates.length; i++) {
    latLngs.push(new L.LatLng(coordinates[i][1], coordinates[i][0]));
  }


  var mask = L.mask(latLngs)
  mask.addTo(map);

  var options = {
    style: function (feature) {
      return {
        "color": "yellow",
        "weight": 2,
        "opacity": 0.4,
        "fillColor": "yellow",
        "fillOpacity": 0.75,
      };
    }
  };

  var coordinates = Polygons[0].geometry.coordinates[0];
  var coordinates1 = Polygons[1].geometry.coordinates[0];
  var coordinates2 = Polygons[2].geometry.coordinates[0];
  var coordinates3 = Polygons[3].geometry.coordinates[0];
  var coordinates4 = Polygons[4].geometry.coordinates[0];
  var coordinates5 = Polygons[5].geometry.coordinates[0];
  var coordinates6 = Polygons[6].geometry.coordinates[0];
  var coordinates7 = Polygons[7].geometry.coordinates[0];

  function updateMask(){
    sc_areas = [];
    for (i=0; i<Polygons.length; i++) {
        var lpoly = new L.geoJson(Polygons[i], options);
        // console.log(lpoly)
        sc_areas.push(lpoly);
        lpoly.addTo(map);
      }
    sc_areas[2].on('click', function(e) {
      //open popup;
      active_area_id = 0;
      var popup = L.popup()
      .setLatLng(e.latlng)
      .setContent('Sound Circut')
      .openOn(map);
      map.removeLayer(mask)
      var latLngs = []
      // var coordinates = Polygons[2].geometry.coordinates[0];
      for (i=0; i<coordinates2.length; i++) {
        latLngs.push(new L.LatLng(coordinates2[i][1], coordinates2[i][0]));
      }
      mask = L.mask(latLngs)
      mask.addTo(map);
      updateMask();
    });
      sc_areas[1].on('click', function(e) {
      //open popup;
      active_area_id = 0;
      var popup = L.popup()
      .setLatLng(e.latlng)
      .setContent('Sound Circut')
      .openOn(map);
      map.removeLayer(mask)
      var latLngs = []
      // var coordinates = Polygons[2].geometry.coordinates[0];
      for (i=0; i<coordinates1.length; i++) {
        latLngs.push(new L.LatLng(coordinates1[i][1], coordinates1[i][0]));
      }
      mask = L.mask(latLngs)
      mask.addTo(map);
      updateView();
    });
  }

function showPopup(this_layer_poly, active_area_id){
  var artwork_title = artwork_meta_data[active_area_id]["Artwork"];
  var artist_name = artwork_meta_data[active_area_id]["Artist"];
  var artist_url = artwork_meta_data[active_area_id]["URL"];;
  var popup = L.popup()
   .setLatLng(this_layer_poly.latlng)
   .setContent('<b>' + artwork_title + "</b><br>" + artist_name + '<br><a href="' + artist_url + '">More Info</a>')
   .openOn(map);
}

function addMask(old_mask, mask_coordinates){
  map.removeLayer(old_mask)
  latLngs = []
  for (i=0; i<coordinates.length; i++) {
      latLngs.push(new L.LatLng(coordinates[i][1], coordinates[i][0]));
  }
  mask = L.mask(latLngs)
  mask.addTo(map);
}

function updateView(){
  layerpoly = new L.geoJson(Polygons[0],options)
  layerpoly2 = new L.geoJson(Polygons[1],options)
  layerpoly3 = new L.geoJson(Polygons[2],options)
  layerpoly4 = new L.geoJson(Polygons[3],options)
  layerpoly5 = new L.geoJson(Polygons[4],options)
  layerpoly6 = new L.geoJson(Polygons[5],options)
  layerpoly7 = new L.geoJson(Polygons[6],options)
  layerpoly8 = new L.geoJson(Polygons[7],options)
  layerpoly9 = new L.geoJson(Polygons[8],options)
  layerpoly.addTo(map);
  layerpoly2.addTo(map);
  layerpoly3.addTo(map);
  layerpoly4.addTo(map);
  layerpoly5.addTo(map);
  layerpoly6.addTo(map);
  layerpoly7.addTo(map);
  layerpoly8.addTo(map);
  layerpoly9.addTo(map);


  layerpoly.on('click', function(e) {
  //open popup;
  active_area = 0;
  showPopup(e, active_area);
  // var artwork_title = artwork_meta_data[active_area]["Artwork"];
  // var artist_name = artwork_meta_data[active_area]["Artist"];
  // var artist_url = artwork_meta_data[active_area]["URL"];;
  // var popup = L.popup()
  //  .setLatLng(e.latlng)
  //  .setContent('<b>' + artwork_title + "</b><br>" + artist_name + '<br><a href="' + artist_url + '">More Info</a>')
  //  .openOn(map);
  // map.removeLayer(mask)
  // latLngs = []
  // for (i=0; i<coordinates.length; i++) {
  //     latLngs.push(new L.LatLng(coordinates[i][1], coordinates[i][0]));
  // }
  // mask = L.mask(latLngs)
  // mask.addTo(map);
  addMask(mask, coordinates);

  updateView();
});

layerpoly2.on('click', function(e) {
  //open popup;
  active_area = 1;
  showPopup(e, active_area);
  map.removeLayer(mask)
  addMask(mask, coordinates1);
  updateView();
});

layerpoly3.on('click', function(e) {
  //open popup;
  active_area = 2;
  showPopup(e, active_area);
  map.removeLayer(mask)
  latLngs = []
  for (i=0; i<coordinates2.length; i++) {
      latLngs.push(new L.LatLng(coordinates2[i][1], coordinates2[i][0]));
  }
  mask = L.mask(latLngs)
  mask.addTo(map);
  updateView();
});

layerpoly4.on('click', function(e) {
  //open popup;
  active_area = 3;
  showPopup(e, active_area);
  map.removeLayer(mask)
  latLngs = []
  for (i=0; i<coordinates3.length; i++) {
      latLngs.push(new L.LatLng(coordinates3[i][1], coordinates3[i][0]));
  }
  mask = L.mask(latLngs)
  mask.addTo(map);
  updateView();
});

layerpoly5.on('click', function(e) {
  //open popup;
  active_area = 4;
  showPopup(e, active_area);
  map.removeLayer(mask)
  latLngs = []
  for (i=0; i<coordinates4.length; i++) {
      latLngs.push(new L.LatLng(coordinates4[i][1], coordinates4[i][0]));
  }
  mask = L.mask(latLngs)
  mask.addTo(map);
  updateView();
});

layerpoly6.on('click', function(e) {
  //open popup;
  active_area = 5;
  showPopup(e, active_area);

  map.removeLayer(mask)
  latLngs = []
  for (i=0; i<coordinates5.length; i++) {
      latLngs.push(new L.LatLng(coordinates5[i][1], coordinates5[i][0]));
  }
  mask = L.mask(latLngs)
  mask.addTo(map);
  updateView();
});

layerpoly7.on('click', function(e) {
  //open popup;
  active_area = 6;
  showPopup(e, active_area);
  map.removeLayer(mask)
  latLngs = []
  for (i=0; i<coordinates6.length; i++) {
      latLngs.push(new L.LatLng(coordinates6[i][1], coordinates6[i][0]));
  }
  mask = L.mask(latLngs)
  mask.addTo(map);
  updateView();
});

layerpoly8.on('click', function(e) {
  //open popup;
  active_area = 7;
  showPopup(e, active_area);
  map.removeLayer(mask)
  latLngs = []
  for (i=0; i<coordinates7.length; i++) {
      latLngs.push(new L.LatLng(coordinates7[i][1], coordinates7[i][0]));
  }
  mask = L.mask(latLngs)
  mask.addTo(map);
  updateView();
});

layerpoly9.on('click', function(e) {
  //open popup;
  active_area = 8;
  showPopup(e, active_area);
  map.removeLayer(mask)
  latLngs = []
  for (i=0; i<coordinates8.length; i++) {
      latLngs.push(new L.LatLng(coordinates8[i][1], coordinates8[i][0]));
  }
  mask = L.mask(latLngs)
  mask.addTo(map);
  updateView();
});
}

updateView();
  // updateMask();
</script>
